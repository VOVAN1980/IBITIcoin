// scripts/init-links.js
require('dotenv').config();
const { ethers } = require('hardhat');

async function main() {
  const {
    IBITI_TOKEN_ADDRESS,
    FEE_MANAGER_ADDRESS,
    USER_STATUS_MANAGER_ADDRESS,
    BRIDGE_MANAGER_ADDRESS,
    STAKING_MODULE_ADDRESS,
    DAO_MODULE_ADDRESS,
    NFT_DISCOUNT_ADDRESS,
    NFT_SALE_MANAGER_ADDRESS,
  } = process.env;

  // Проверяем, что все адреса есть
  const missing = [
    !IBITI_TOKEN_ADDRESS && 'IBITI_TOKEN_ADDRESS',
    !FEE_MANAGER_ADDRESS && 'FEE_MANAGER_ADDRESS',
    !USER_STATUS_MANAGER_ADDRESS && 'USER_STATUS_MANAGER_ADDRESS',
    !BRIDGE_MANAGER_ADDRESS && 'BRIDGE_MANAGER_ADDRESS',
    !STAKING_MODULE_ADDRESS && 'STAKING_MODULE_ADDRESS',
    !DAO_MODULE_ADDRESS && 'DAO_MODULE_ADDRESS',
    !NFT_DISCOUNT_ADDRESS && 'NFT_DISCOUNT_ADDRESS',
    !NFT_SALE_MANAGER_ADDRESS && 'NFT_SALE_MANAGER_ADDRESS',
  ].filter(Boolean);

  if (missing.length) {
    console.error('❌ В .env отсутствуют адреса:', missing.join(', '));
    process.exit(1);
  }

  const [deployer] = await ethers.getSigners();
  console.log(`\n> Инициализируем связи от: ${deployer.address}\n`);

  const IB = await ethers.getContractFactory('IBITIcoin');
  const ibi = IB.attach(IBITI_TOKEN_ADDRESS);

  // Снимаем паузу, если нужно
  if (await ibi.paused()) {
    console.log('— Unpause IBITIcoin');
    await (await ibi.unpause()).wait();
  }

  // 1) Устанавливаем модули в IBITIcoin
  console.log('— setFeeManager');
  await (await ibi.setFeeManager(FEE_MANAGER_ADDRESS)).wait();

  console.log('— setUserStatusManager');
  await (await ibi.setUserStatusManager(USER_STATUS_MANAGER_ADDRESS)).wait();

  console.log('— setBridgeManager');
  await (await ibi.setBridgeManager(BRIDGE_MANAGER_ADDRESS)).wait();

  console.log('— setStakingModule');
  await (await ibi.setStakingModule(STAKING_MODULE_ADDRESS)).wait();

  console.log('— setDaoModule');
  await (await ibi.setDaoModule(DAO_MODULE_ADDRESS)).wait();

  console.log('— setNftDiscount');
  await (await ibi.setNftDiscount(NFT_DISCOUNT_ADDRESS)).wait();

  // 2) Конфигурируем NFTDiscount, NFTSaleManager и другие
  const NFTDisc = await ethers.getContractFactory('NFTDiscount');
  const disc = NFTDisc.attach(NFT_DISCOUNT_ADDRESS);

  console.log('— NFTDiscount.setPayToken');
  await (await disc.setPayToken(USER_STATUS_MANAGER_ADDRESS)).wait();
  // и т.д. — остальные вызовы по аналогии

  const NSM = await ethers.getContractFactory('NFTSaleManager');
  const nsm = NSM.attach(NFT_SALE_MANAGER_ADDRESS);

  if (await nsm.paused()) {
    console.log('— Unpause NFTSaleManager');
    await (await nsm.unpause()).wait();
  }
  console.log('— NFTSaleManager.setOracleEnabled(true)');
  await (await nsm.setOracleEnabled(true)).wait();
  // + другие настройки

  console.log('\n✅ Все связи инициализированы для продакшена.\n');
}

main()
  .then(() => process.exit(0))
  .catch(err => {
    console.error('❌ Ошибка в init-links.js:', err);
    process.exit(1);
  });
